apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'android-apt'

android {
	def globalConfiguration = rootProject.extensions.getByName("ext")

	compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
	buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

	defaultConfig {
		minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
		targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

		applicationId globalConfiguration.getAt("androidApplicationId")
		versionCode globalConfiguration.getAt("androidVersionCode")
		versionName globalConfiguration.getAt("androidVersionName")
		testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
		testApplicationId globalConfiguration.getAt("testApplicationId")
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_7
		targetCompatibility JavaVersion.VERSION_1_7
	}

	packagingOptions {
		exclude 'LICENSE.txt'
		exclude 'META-INF/DEPENDENCIES'
		exclude 'META-INF/ASL2.0'
		exclude 'META-INF/NOTICE'
		exclude 'META-INF/LICENSE'
	}

	lintOptions {
		quiet true
		abortOnError false
		ignoreWarnings true
		disable 'InvalidPackage'            //Some libraries have issues with this.
		disable 'OldTargetApi'              //Lint gives this warning but SDK 20 would be Android L Beta.
		disable 'IconDensities'             //For testing purpose. This is safe to remove.
		disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
	}

	signingConfigs {
		debug {
			storeFile file('')
			storePassword 'android'
			keyAlias 'androiddebugkey'
			keyPassword 'android'
		}
	}

	buildTypes {
		debug {
			signingConfig signingConfigs.debug
		}
	}

	productFlavors {
		devel {
			buildConfigField 'boolean', 'CRASHLYTICS_ENABLED', 'false'
			buildConfigField 'String', 'GOOGLE_SENDER_ID', '"481171466302"'
		}
		prod {
			buildConfigField 'boolean', 'CRASHLYTICS_ENABLED', 'true'
			buildConfigField 'String', 'GOOGLE_SENDER_ID', '"481171466302"'
		}
	}
}

dependencies {
	def dep = rootProject.ext.dep

	compile project(':domain')
	compile project(':data')

	compile dep.dagger
	apt dep.daggerCompiler

	compile dep.butterKnife
	apt dep.butterKnifeCompiler

	compile dep.appCompat
	compile dep.cardView
	compile dep.recyclerView
	compile dep.supportDesign
	compile dep.facebook
	compile dep.rxJava
	compile dep.rxAndroid
	compile dep.ormlite
	compile dep.jodaTime
	compile dep.calligraphy
	compile dep.rayMaterial
	compile dep.timber
	compile dep.materialDialogs
	compile dep.iconics
	compile dep.iconicsMaterial
	compile dep.iconicsCMaterial
	compile dep.multiDex

	compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
		transitive = true;
	}

	provided dep.javaxAnnotation
	provided dep.lombok

	androidTestCompile dep.mockito
	androidTestCompile dep.dexmaker
	androidTestCompile dep.dexmakerMockito
	androidTestCompile dep.espresso
	androidTestCompile dep.testingSupportLib
}
